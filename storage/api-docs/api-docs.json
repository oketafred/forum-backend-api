{
    "openapi": "3.0.0",
    "info": {
        "title": "Forum API Documentation",
        "description": "Forum OpenApi description",
        "contact": {
            "email": "oketafred@gmail.com"
        },
        "license": {
            "name": "Developed by Oketa Fred",
            "url": "https://www.linkedin.com/in/oketafred/"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost/api",
            "description": "Forum API Server"
        }
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "description": "Register with name, nemail, password",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User Created Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User Created Successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login a system user",
                "description": "Login a user using email, password",
                "operationId": "authLogin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User loggedin successfully",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": []
            }
        },
        "/me": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Get details of the authenticated user",
                "description": "Get details of the authenticated user",
                "operationId": "me",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout a user",
                "description": "Logout a user and invalidate token",
                "operationId": "authLogout",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Returns when user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh a token",
                "description": "Invalidate the old token and get a new token",
                "operationId": "refresh",
                "responses": {
                    "200": {
                        "description": "A New Token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "A New Token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/category": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get all Categories",
                "description": "Get all Categories - Category Collection",
                "operationId": "App\\Http\\Controllers\\CategoryController::index",
                "responses": {
                    "200": {
                        "description": "Category Collection",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Category Create",
                "description": "Create a new Category",
                "operationId": "authLogout",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category Created Successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/category/{slug}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get a Specific Category",
                "description": "Get a Specific Category by passing the slug as the parameter",
                "operationId": "App\\Http\\Controllers\\CategoryController::show",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Category Slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a Specific Category",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Update a Specific Category",
                "description": "Update a Specific Category by passing the slug as the parameter",
                "operationId": "categoryUpdate",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Category Slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete a Specific Category",
                "description": "Delete a Specific Category by passing the slug as the parameter",
                "operationId": "App\\Http\\Controllers\\CategoryController::destroy",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Category Slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/like/{id}": {
            "post": {
                "tags": [
                    "Like"
                ],
                "summary": "Like a Reply",
                "description": "Like a reply on a Question by passing the reply id as the parameter",
                "operationId": "likeReply",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reply Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Like"
                ],
                "summary": "unLike a Reply",
                "description": "Like a reply on a Question by passing the reply id as the parameter",
                "operationId": "App\\Http\\Controllers\\LikeController::unLikeIt",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reply Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "unLike a reply",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/questions": {
            "get": {
                "tags": [
                    "Questions"
                ],
                "summary": "Get All Questions",
                "description": "Get All Questions - Questions Collection",
                "operationId": "App\\Http\\Controllers\\QuestionController::index",
                "responses": {
                    "200": {
                        "description": "Questions Collection",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Questions"
                ],
                "summary": "Question Create",
                "description": "Create a new Question",
                "operationId": "questionCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuestionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question Created Successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/questions/{slug}": {
            "get": {
                "tags": [
                    "Questions"
                ],
                "summary": "Get a Specific Question",
                "description": "Get a Specific Question by passing the question slug as the parameter",
                "operationId": "App\\Http\\Controllers\\QuestionController::show",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Question Slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Question",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Questions"
                ],
                "summary": "Update a Specific Question",
                "description": "Update a Specific Question by passing the question slug as the parameter",
                "operationId": "updateQuestion",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Category Slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuestionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Questions"
                ],
                "summary": "Delete a Specific Question",
                "description": "Delete a Specific Question by passing the question slug as the parameter",
                "operationId": "App\\Http\\Controllers\\QuestionController::destroy",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Question Slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Question",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/question/{slug}/reply": {
            "get": {
                "tags": [
                    "Reply"
                ],
                "summary": "Get all Replies for a particular question",
                "description": "Get all Replies for a particular question - Replies Collection",
                "operationId": "App\\Http\\Controllers\\ReplyController::index",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Question Slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Replies for a particular question",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Reply"
                ],
                "summary": "Category Create",
                "description": "Create a new Reply",
                "operationId": "createReply",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Question Slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReplyRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        },
        "/question/{slug}/reply/{id}": {
            "get": {
                "tags": [
                    "Reply"
                ],
                "summary": "Get a Specific Reply",
                "description": "Get a specific Reply by passing the question slug and reply id as the parameters",
                "operationId": "App\\Http\\Controllers\\ReplyController::show",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Question Slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reply Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Question",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Reply"
                ],
                "summary": "Update a Specific Reply",
                "description": "Update a specific Reply by passing the question slug and reply id as the parameters",
                "operationId": "replyUpdated",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Question Slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reply Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReplyRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Reply"
                ],
                "summary": "Delete a Specific Reply",
                "description": "Delete a specific Reply by passing the question slug and reply id as the parameters",
                "operationId": "App\\Http\\Controllers\\ReplyController::destroy",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Question Slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reply Id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Question",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "apiAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "CategoryRequest": {
                "title": "Store CategoryRequest",
                "description": "Store category request body data",
                "properties": {
                    "name": {
                        "title": "name",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "title": "Store LoginRequest",
                "description": "Store login request body data",
                "properties": {
                    "email": {
                        "title": "email",
                        "type": "string"
                    },
                    "password": {
                        "title": "password",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "QuestionRequest": {
                "title": "Store QuestionRequest",
                "description": "Store Question request body data",
                "properties": {
                    "title": {
                        "title": "title",
                        "type": "string"
                    },
                    "body": {
                        "title": "body",
                        "type": "string"
                    },
                    "category_id": {
                        "title": "category_id",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "title": "Store RegisterRequest",
                "description": "Store register request body data",
                "properties": {
                    "name": {
                        "title": "name",
                        "type": "string"
                    },
                    "email": {
                        "title": "email",
                        "type": "string"
                    },
                    "password": {
                        "title": "password",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReplyRequest": {
                "title": "Store ReplyRequest",
                "description": "Store reply request body data",
                "properties": {
                    "body": {
                        "title": "body",
                        "type": "string"
                    },
                    "question_id": {
                        "title": "question_id",
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "422": {
                "description": "Sorry, wrong email address or password. Please try again",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Sorry, wrong email address or password. Please try again"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "401": {
                "description": "Returns when user is not authenticated",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Unauthenticated"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "apiAuth": {
                "type": "http",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        []
    ]
}